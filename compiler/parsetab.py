
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIVIDE ID LBRACE LPAREN MINUS NUMBER PLUS RBRACE RPAREN SEMICOLON TIMES TYPEstatement : TYPE ID ASSIGN expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID'
    
_lr_action_items = {'TYPE':([0,],[2,]),'$end':([1,9,],[0,-1,]),'ID':([2,4,7,10,11,12,13,],[3,5,5,5,5,5,5,]),'ASSIGN':([3,],[4,]),'LPAREN':([4,7,10,11,12,13,],[7,7,7,7,7,7,]),'NUMBER':([4,7,10,11,12,13,],[8,8,8,8,8,8,]),'SEMICOLON':([5,6,8,15,16,17,18,19,],[-8,9,-7,-2,-3,-4,-5,-6,]),'PLUS':([5,6,8,14,15,16,17,18,19,],[-8,10,-7,10,10,10,10,10,-6,]),'MINUS':([5,6,8,14,15,16,17,18,19,],[-8,11,-7,11,11,11,11,11,-6,]),'TIMES':([5,6,8,14,15,16,17,18,19,],[-8,12,-7,12,12,12,12,12,-6,]),'DIVIDE':([5,6,8,14,15,16,17,18,19,],[-8,13,-7,13,13,13,13,13,-6,]),'RPAREN':([5,8,14,15,16,17,18,19,],[-8,-7,19,-2,-3,-4,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([4,7,10,11,12,13,],[6,14,15,16,17,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> TYPE ID ASSIGN expression SEMICOLON','statement',5,'p_statement_assign','parser.py',5),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',9),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',10),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',11),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',12),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',16),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',20),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',24),
]
